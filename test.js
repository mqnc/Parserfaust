let packedProgram=[{type:'Grammar', id:'op0', html:'<table id=\'op0\' data-type=\'Grammar\'></table>'},{type:'Rule', id:'@op2', name:'Grammar', html:'<tr><td><span id=\'@op2\' data-type=\'Rule\'>Grammar</span></td><td> &lt;- </td><td><span id=\'op2\' data-type=\'Sequence\'>(<span id=\'opSpacing</span> <span id=\'op1\' data-type=\'OneOrMore\'>(<span id=\'opDefinition</span>)+</span> <span id=\'opEndOfFile</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op3', name:'Definition', html:'<tr><td><span id=\'@op3\' data-type=\'Rule\'>Definition</span></td><td> &lt;- </td><td><span id=\'op3\' data-type=\'Sequence\'>(<span id=\'opIdentifier</span> <span id=\'opLEFTARROW</span> <span id=\'opExpression</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op6', name:'Expression', html:'<tr><td><span id=\'@op6\' data-type=\'Rule\'>Expression</span></td><td> &lt;- </td><td><span id=\'op6\' data-type=\'Sequence\'>(<span id=\'opSequence</span> <span id=\'op5\' data-type=\'ZeroOrMore\'>(<span id=\'op4\' data-type=\'Sequence\'>(<span id=\'opSLASH</span> <span id=\'opSequence</span>)</span>)*</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op7', name:'Sequence', html:'<tr><td><span id=\'@op7\' data-type=\'Rule\'>Sequence</span></td><td> &lt;- </td><td><span id=\'op7\' data-type=\'ZeroOrMore\'>(<span id=\'opPrefix</span>)*</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op10', name:'Prefix', html:'<tr><td><span id=\'@op10\' data-type=\'Rule\'>Prefix</span></td><td> &lt;- </td><td><span id=\'op10\' data-type=\'Sequence\'>(<span id=\'op9\' data-type=\'Optional\'>(<span id=\'op8\' data-type=\'Choice\'>(<span id=\'opAND</span> / <span id=\'opNOT</span>)</span>)?</span> <span id=\'opSuffix</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op13', name:'Suffix', html:'<tr><td><span id=\'@op13\' data-type=\'Rule\'>Suffix</span></td><td> &lt;- </td><td><span id=\'op13\' data-type=\'Sequence\'>(<span id=\'opPrimary</span> <span id=\'op12\' data-type=\'Optional\'>(<span id=\'op11\' data-type=\'Choice\'>(<span id=\'opQUESTION</span> / <span id=\'opSTAR</span> / <span id=\'opPLUS</span>)</span>)?</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op17', name:'Primary', html:'<tr><td><span id=\'@op17\' data-type=\'Rule\'>Primary</span></td><td> &lt;- </td><td><span id=\'op17\' data-type=\'Choice\'>(<span id=\'op15\' data-type=\'Sequence\'>(<span id=\'opIdentifier</span> <span id=\'op14\' data-type=\'Not\'>!(<span id=\'opLEFTARROW</span>)</span>)</span> / <span id=\'op16\' data-type=\'Sequence\'>(<span id=\'opOPEN</span> <span id=\'opExpression</span> <span id=\'opCLOSE</span>)</span> / <span id=\'opLiteral</span> / <span id=\'opClass</span> / <span id=\'opDOT</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op20', name:'Identifier', html:'<tr><td><span id=\'@op20\' data-type=\'Rule\'>Identifier</span></td><td> &lt;- </td><td><span id=\'op20\' data-type=\'Action\'>(<span id=\'op19\' data-type=\'Sequence\'>(<span id=\'opIdentStart</span> <span id=\'op18\' data-type=\'ZeroOrMore\'>(<span id=\'opIdentCont</span>)*</span> <span id=\'opSpacing</span>)</span>){PegGrammarFactory.lua:80}</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op24', name:'IdentStart', html:'<tr><td><span id=\'@op24\' data-type=\'Rule\'>IdentStart</span></td><td> &lt;- </td><td><span id=\'op24\' data-type=\'Choice\'>(<span id=\'op21\' data-type=\'Range\'>[a-z]</span> / <span id=\'op22\' data-type=\'Range\'>[A-Z]</span> / <span id=\'op23\' data-type=\'Range\'>[_]</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op26', name:'IdentCont', html:'<tr><td><span id=\'@op26\' data-type=\'Rule\'>IdentCont</span></td><td> &lt;- </td><td><span id=\'op26\' data-type=\'Choice\'>(<span id=\'opIdentStart</span> / <span id=\'op25\' data-type=\'Range\'>[0-9]</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op42', name:'Literal', html:'<tr><td><span id=\'@op42\' data-type=\'Rule\'>Literal</span></td><td> &lt;- </td><td><span id=\'op42\' data-type=\'Action\'>(<span id=\'op41\' data-type=\'Choice\'>(<span id=\'op33\' data-type=\'Sequence\'>(<span id=\'op27\' data-type=\'Range\'>[\\\&apos;]</span> <span id=\'op31\' data-type=\'ZeroOrMore\'>(<span id=\'op30\' data-type=\'Sequence\'>(<span id=\'op29\' data-type=\'Not\'>!(<span id=\'op28\' data-type=\'Range\'>[\\\&apos;]</span>)</span> <span id=\'opChar</span>)</span>)*</span> <span id=\'op32\' data-type=\'Range\'>[\\\&apos;]</span> <span id=\'opSpacing</span>)</span> / <span id=\'op40\' data-type=\'Sequence\'>(<span id=\'op34\' data-type=\'Range\'>[\\\&quot;]</span> <span id=\'op38\' data-type=\'ZeroOrMore\'>(<span id=\'op37\' data-type=\'Sequence\'>(<span id=\'op36\' data-type=\'Not\'>!(<span id=\'op35\' data-type=\'Range\'>[\\\&quot;]</span>)</span> <span id=\'opChar</span>)</span>)*</span> <span id=\'op39\' data-type=\'Range\'>[\\\&quot;]</span> <span id=\'opSpacing</span>)</span>)</span>){PegGrammarFactory.lua:98}</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op49', name:'Class', html:'<tr><td><span id=\'@op49\' data-type=\'Rule\'>Class</span></td><td> &lt;- </td><td><span id=\'op49\' data-type=\'Sequence\'>(<span id=\'op43\' data-type=\'Literal\'>\&quot;\\[\&quot;</span> <span id=\'op47\' data-type=\'ZeroOrMore\'>(<span id=\'op46\' data-type=\'Sequence\'>(<span id=\'op45\' data-type=\'Not\'>!(<span id=\'op44\' data-type=\'Literal\'>\&quot;\\]\&quot;</span>)</span> <span id=\'opRange</span>)</span>)*</span> <span id=\'op48\' data-type=\'Literal\'>\&quot;\\]\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op52', name:'Range', html:'<tr><td><span id=\'@op52\' data-type=\'Rule\'>Range</span></td><td> &lt;- </td><td><span id=\'op52\' data-type=\'Choice\'>(<span id=\'op51\' data-type=\'Sequence\'>(<span id=\'opChar</span> <span id=\'op50\' data-type=\'Literal\'>\&quot;-\&quot;</span> <span id=\'opChar</span>)</span> / <span id=\'opChar</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op54', name:'Char', html:'<tr><td><span id=\'@op54\' data-type=\'Rule\'>Char</span></td><td> &lt;- </td><td><span id=\'op54\' data-type=\'Action\'>(<span id=\'op53\' data-type=\'Choice\'>(<span id=\'opEscape</span> / <span id=\'opOctal</span> / <span id=\'opSimpleChar</span>)</span>){PegGrammarFactory.lua:114}</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op66', name:'Escape', html:'<tr><td><span id=\'@op66\' data-type=\'Rule\'>Escape</span></td><td> &lt;- </td><td><span id=\'op66\' data-type=\'Action\'>(<span id=\'op65\' data-type=\'Sequence\'>(<span id=\'op55\' data-type=\'Literal\'>\&quot;\\\\\&quot;</span> <span id=\'op64\' data-type=\'Choice\'>(<span id=\'op56\' data-type=\'Range\'>[n]</span> / <span id=\'op57\' data-type=\'Range\'>[r]</span> / <span id=\'op58\' data-type=\'Range\'>[t]</span> / <span id=\'op59\' data-type=\'Range\'>[\\\&apos;]</span> / <span id=\'op60\' data-type=\'Range\'>[\\\&quot;]</span> / <span id=\'op61\' data-type=\'Range\'>[\\[]</span> / <span id=\'op62\' data-type=\'Range\'>[\\]]</span> / <span id=\'op63\' data-type=\'Range\'>[\\\\]</span>)</span>)</span>){PegGrammarFactory.lua:121}</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op78', name:'Octal', html:'<tr><td><span id=\'@op78\' data-type=\'Rule\'>Octal</span></td><td> &lt;- </td><td><span id=\'op78\' data-type=\'Action\'>(<span id=\'op77\' data-type=\'Choice\'>(<span id=\'op71\' data-type=\'Sequence\'>(<span id=\'op67\' data-type=\'Literal\'>\&quot;\\\\\&quot;</span> <span id=\'op68\' data-type=\'Range\'>[0-3]</span> <span id=\'op69\' data-type=\'Range\'>[0-7]</span> <span id=\'op70\' data-type=\'Range\'>[0-7]</span>)</span> / <span id=\'op76\' data-type=\'Sequence\'>(<span id=\'op72\' data-type=\'Literal\'>\&quot;\\\\\&quot;</span> <span id=\'op73\' data-type=\'Range\'>[0-7]</span> <span id=\'op75\' data-type=\'Optional\'>(<span id=\'op74\' data-type=\'Range\'>[0-7]</span>)?</span>)</span>)</span>){PegGrammarFactory.lua:138}</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op83', name:'SimpleChar', html:'<tr><td><span id=\'@op83\' data-type=\'Rule\'>SimpleChar</span></td><td> &lt;- </td><td><span id=\'op83\' data-type=\'Action\'>(<span id=\'op82\' data-type=\'Sequence\'>(<span id=\'op80\' data-type=\'Not\'>!(<span id=\'op79\' data-type=\'Literal\'>\&quot;\\\\\&quot;</span>)</span> <span id=\'op81\' data-type=\'Any\'>.</span>)</span>){PegGrammarFactory.lua:142}</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op85', name:'LEFTARROW', html:'<tr><td><span id=\'@op85\' data-type=\'Rule\'>LEFTARROW</span></td><td> &lt;- </td><td><span id=\'op85\' data-type=\'Sequence\'>(<span id=\'op84\' data-type=\'Literal\'>\&quot;&lt;-\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op87', name:'SLASH', html:'<tr><td><span id=\'@op87\' data-type=\'Rule\'>SLASH</span></td><td> &lt;- </td><td><span id=\'op87\' data-type=\'Sequence\'>(<span id=\'op86\' data-type=\'Literal\'>\&quot;/\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op89', name:'AND', html:'<tr><td><span id=\'@op89\' data-type=\'Rule\'>AND</span></td><td> &lt;- </td><td><span id=\'op89\' data-type=\'Sequence\'>(<span id=\'op88\' data-type=\'Literal\'>\&quot;&amp;\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op91', name:'NOT', html:'<tr><td><span id=\'@op91\' data-type=\'Rule\'>NOT</span></td><td> &lt;- </td><td><span id=\'op91\' data-type=\'Sequence\'>(<span id=\'op90\' data-type=\'Literal\'>\&quot;!\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op93', name:'QUESTION', html:'<tr><td><span id=\'@op93\' data-type=\'Rule\'>QUESTION</span></td><td> &lt;- </td><td><span id=\'op93\' data-type=\'Sequence\'>(<span id=\'op92\' data-type=\'Literal\'>\&quot;?\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op95', name:'STAR', html:'<tr><td><span id=\'@op95\' data-type=\'Rule\'>STAR</span></td><td> &lt;- </td><td><span id=\'op95\' data-type=\'Sequence\'>(<span id=\'op94\' data-type=\'Literal\'>\&quot;*\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op97', name:'PLUS', html:'<tr><td><span id=\'@op97\' data-type=\'Rule\'>PLUS</span></td><td> &lt;- </td><td><span id=\'op97\' data-type=\'Sequence\'>(<span id=\'op96\' data-type=\'Literal\'>\&quot;+\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op99', name:'OPEN', html:'<tr><td><span id=\'@op99\' data-type=\'Rule\'>OPEN</span></td><td> &lt;- </td><td><span id=\'op99\' data-type=\'Sequence\'>(<span id=\'op98\' data-type=\'Literal\'>\&quot;(\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op101', name:'CLOSE', html:'<tr><td><span id=\'@op101\' data-type=\'Rule\'>CLOSE</span></td><td> &lt;- </td><td><span id=\'op101\' data-type=\'Sequence\'>(<span id=\'op100\' data-type=\'Literal\'>\&quot;)\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op103', name:'DOT', html:'<tr><td><span id=\'@op103\' data-type=\'Rule\'>DOT</span></td><td> &lt;- </td><td><span id=\'op103\' data-type=\'Sequence\'>(<span id=\'op102\' data-type=\'Literal\'>\&quot;.\&quot;</span> <span id=\'opSpacing</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op105', name:'Spacing', html:'<tr><td><span id=\'@op105\' data-type=\'Rule\'>Spacing</span></td><td> &lt;- </td><td><span id=\'op105\' data-type=\'ZeroOrMore\'>(<span id=\'op104\' data-type=\'Choice\'>(<span id=\'opSpace</span> / <span id=\'opComment</span>)</span>)*</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op111', name:'Comment', html:'<tr><td><span id=\'@op111\' data-type=\'Rule\'>Comment</span></td><td> &lt;- </td><td><span id=\'op111\' data-type=\'Sequence\'>(<span id=\'op106\' data-type=\'Literal\'>\&quot;#\&quot;</span> <span id=\'op110\' data-type=\'ZeroOrMore\'>(<span id=\'op109\' data-type=\'Sequence\'>(<span id=\'op107\' data-type=\'Not\'>!(<span id=\'opEndOfLine</span>)</span> <span id=\'op108\' data-type=\'Any\'>.</span>)</span>)*</span> <span id=\'opEndOfLine</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op114', name:'Space', html:'<tr><td><span id=\'@op114\' data-type=\'Rule\'>Space</span></td><td> &lt;- </td><td><span id=\'op114\' data-type=\'Choice\'>(<span id=\'op112\' data-type=\'Literal\'>\&quot; \&quot;</span> / <span id=\'op113\' data-type=\'Literal\'>\&quot;\t\&quot;</span> / <span id=\'opEndOfLine</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op118', name:'EndOfLine', html:'<tr><td><span id=\'@op118\' data-type=\'Rule\'>EndOfLine</span></td><td> &lt;- </td><td><span id=\'op118\' data-type=\'Choice\'>(<span id=\'op115\' data-type=\'Literal\'>\&quot;\r\n\&quot;</span> / <span id=\'op116\' data-type=\'Literal\'>\&quot;\n\&quot;</span> / <span id=\'op117\' data-type=\'Literal\'>\&quot;\r\&quot;</span>)</span></td></tr>', parent:'op0'},{type:'Rule', id:'@op120', name:'EndOfFile', html:'<tr><td><span id=\'@op120\' data-type=\'Rule\'>EndOfFile</span></td><td> &lt;- </td><td><span id=\'op120\' data-type=\'Not\'>!(<span id=\'op119\' data-type=\'Any\'>.</span>)</span></td></tr>', parent:'op0'},[0,1],[2,1],[105,1],[104,1],[114,1],[112,1],-1,[113,1],-1,[118,1],[115,1],-1,[116,1],-1,[117,1],-1,-1,-1,[111,1],[106,1],-1,-1,-1,0,[1,1],[3,1],[20,1],[19,1],[24,1],[21,1],1,1,[18,2],[26,2],[24,2],[21,2],-1,[22,2],-1,[23,2],-1,-1,[25,2],-1,-1,0,[105,2],[104,2],[114,2],[112,2],1,1,1,[104,3],[114,3],[112,3],-1,[113,3],-1,[118,3],[115,3],-1,[116,3],-1,[117,3],-1,-1,-1,[111,3],[106,3],-1,-1,-1,1,2,2,[85,3],[84,3],2,[105,5],[104,5],[114,5],[112,5],1,1,1,[104,6],[114,6],[112,6],-1,[113,6],-1,[118,6],[115,6],-1,[116,6],-1,[117,6],-1,-1,-1,[111,6],[106,6],-1,-1,-1,1,3,[6,6],[7,6],[10,6],[9,6],[8,6],[89,6],[88,6],-1,-1,[91,6],[90,6],-1,-1,-1,0,[13,6],[17,6],[15,6],[20,6],[19,6],[24,6],[21,6],-1,[22,6],-1,[23,6],-1,-1,-1,-1,-1,[16,6],[99,6],[98,6],-1,-1,-1,[42,6],[41,6],[33,6],[27,6],-1,-1,[40,6],[34,6],1,[38,7],[37,7],[36,7],[35,7],-1,0,[54,7],[53,7],[66,7],[65,7],[55,7],1,[64,8],[56,8],-1,[57,8],-1,[58,8],-1,[59,8],-1,[60,8],-1,[61,8],-1,[62,8],-1,[63,8],-1,-1,-1,-1,[78,7],[77,7],[71,7],[67,7],1,[68,8],1,[69,9],1,[70,10],1,4,4,4,4,4,4,[37,11],[36,11],[35,11],-1,0,[54,11],[53,11],[66,11],[65,11],[55,11],1,[64,12],[56,12],-1,[57,12],-1,[58,12],-1,[59,12],-1,[60,12],-1,[61,12],-1,[62,12],-1,[63,12],-1,-1,-1,-1,[78,11],[77,11],[71,11],[67,11],1,[68,12],1,[69,13],1,[70,14],1,4,4,4,4,4,4,[37,15],[36,15],[35,15],-1,0,[54,15],[53,15],[66,15],[65,15],[55,15],-1,-1,-1,[78,15],[77,15],[71,15],[67,15],-1,-1,[76,15],[72,15],-1,-1,-1,-1,[83,15],[82,15],[80,15],[79,15],-1,0,[81,15],1,1,1,1,1,1,[37,16],[36,16],[35,16],-1,0,[54,16],[53,16],[66,16],[65,16],[55,16],-1,-1,-1,[78,16],[77,16],[71,16],[67,16],-1,-1,[76,16],[72,16],-1,-1,-1,-1,[83,16],[82,16],[80,16],[79,16],-1,0,[81,16],1,1,1,1,1,1,[37,17],[36,17],[35,17],-1,0,[54,17],[53,17],[66,17],[65,17],[55,17],-1,-1,-1,[78,17],[77,17],[71,17],[67,17],-1,-1,[76,17],[72,17],-1,-1,-1,-1,[83,17],[82,17],[80,17],[79,17],-1,0,[81,17],1,1,1,1,1,1,[37,18],[36,18],[35,18],-1,0,[54,18],[53,18],[66,18],[65,18],[55,18],1,[64,19],[56,19],-1,[57,19],-1,[58,19],1,1,2,2,2,2,2,[37,20],[36,20],[35,20],-1,0,[54,20],[53,20],[66,20],[65,20],[55,20],1,[64,21],[56,21],1,1,2,2,2,2,2,[37,22],[36,22],[35,22],-1,0,[54,22],[53,22],[66,22],[65,22],[55,22],1,[64,23],[56,23],-1,[57,23],-1,[58,23],-1,[59,23],-1,[60,23],-1,[61,23],-1,[62,23],1,1,2,2,2,2,2,[37,24],[36,24],[35,24],1,-1,-1,17,[39,24],1,[105,25],[104,25],[114,25],[112,25],-1,[113,25],-1,[118,25],[115,25],-1,[116,25],-1,[117,25],-1,-1,-1,[111,25],[106,25],-1,-1,-1,0,19,19,19,19,[12,25],[11,25],[93,25],[92,25],-1,-1,[95,25],[94,25],-1,-1,[97,25],[96,25],-1,-1,-1,0,19,19,[10,25],[9,25],[8,25],[89,25],[88,25],-1,-1,[91,25],[90,25],-1,-1,-1,0,[13,25],[17,25],[15,25],[20,25],[19,25],[24,25],[21,25],-1,[22,25],-1,[23,25],-1,-1,-1,-1,-1,[16,25],[99,25],[98,25],-1,-1,-1,[42,25],[41,25],[33,25],[27,25],-1,-1,[40,25],[34,25],-1,-1,-1,-1,[49,25],[43,25],-1,-1,[103,25],[102,25],-1,-1,-1,-1,-1,19,[5,25],[4,25],[87,25],[86,25],-1,-1,-1,0,19,24,[3,25],[20,25],[19,25],[24,25],[21,25],-1,[22,25],-1,[23,25],-1,-1,-1,-1,-1,24,[120,25],[119,25],-1,0,24,24,]